esp8266:
  board: d1_mini

esphome:
  name: delta-tango
  name_add_mac_suffix: true

# I2C for SDP810 pressure sensor
i2c:
  sda: GPIO4  # D2
  scl: GPIO5  # D1

# OneWire bus for DS18B20 temperature sensors
dallas:
  - pin: GPIO2  # D4 - moved from GPIO12 for better layout
    update_interval: 30s

sensor:
  # SDP810 Differential Pressure Sensor
  - platform: sdp3x
    name: "HVAC Static Pressure"
    accuracy_decimals: 1
    update_interval: 5s
    unit_of_measurement: "Pa"
    device_class: "pressure"
    state_class: "measurement"
    icon: "mdi:gauge"

  # DS18B20 Temperature Sensors
  - platform: dallas
    name: HVAC Return Air Temperature
    id: hvac_return_air_temperature
    index: 0
    accuracy_decimals: 2
    device_class: "temperature"
    state_class: "measurement"
    
  - platform: dallas
    name: HVAC Supply Air Temperature
    id: hvac_supply_air_temperature
    index: 1
    accuracy_decimals: 2
    device_class: "temperature"
    state_class: "measurement"
    
  # Calculated Delta-T sensors
  - platform: template
    name: HVAC Delta T (째C)
    lambda: 'return id(hvac_return_air_temperature).state - id(hvac_supply_air_temperature).state;'
    accuracy_decimals: 2
    update_interval: 1s
    unit_of_measurement: "째C"
    device_class: "temperature"
    state_class: "measurement"
    icon: "mdi:delta"
    
  - platform: template
    name: HVAC Delta T (째F)
    lambda: |-
      const float hvac_return_air_temperature_f = (id(hvac_return_air_temperature).state * 9/5) + 32;
      const float hvac_supply_air_temperature_f = (id(hvac_supply_air_temperature).state * 9/5) + 32;
      return hvac_return_air_temperature_f - hvac_supply_air_temperature_f;
    update_interval: 1s
    accuracy_decimals: 2
    unit_of_measurement: "째F"
    device_class: "temperature"
    state_class: "measurement"
    icon: "mdi:delta"

  # Additional calculated sensors for enhanced diagnostics
  - platform: template
    name: "HVAC Pressure (inches H2O)"
    lambda: 'return id(hvac_static_pressure).state * 0.00401463;'
    accuracy_decimals: 3
    update_interval: 5s
    unit_of_measurement: "inH2O"
    device_class: "pressure"
    state_class: "measurement"
    icon: "mdi:water-outline"

  # System efficiency indicator
  - platform: template
    name: "HVAC Efficiency Score"
    lambda: |-
      float delta_t_f = (id(hvac_return_air_temperature).state - id(hvac_supply_air_temperature).state) * 9/5;
      if (delta_t_f >= 14) return 4;  // Excellent
      else if (delta_t_f >= 10) return 3;  // Good
      else if (delta_t_f >= 7) return 2;   // Fair
      else return 1;  // Poor
    accuracy_decimals: 0
    update_interval: 5s
    icon: "mdi:star"

# Text sensors for system status
text_sensor:
  - platform: template
    name: "HVAC System Status"
    lambda: |-
      float delta_t_f = (id(hvac_return_air_temperature).state - id(hvac_supply_air_temperature).state) * 9/5;
      float pressure = id(hvac_static_pressure).state;
      
      if (delta_t_f < 7 && pressure > 150) {
        return {"Replace Filter!"};
      } else if (delta_t_f < 10 && pressure > 125) {
        return {"Check Filter"};
      } else if (pressure > 200) {
        return {"High Pressure - Check Airflow"};
      } else if (delta_t_f >= 14 && pressure <= 125) {
        return {"System Running Optimally"};
      } else if (delta_t_f >= 10) {
        return {"System Running Well"};
      } else {
        return {"System Needs Attention"};
      }
    update_interval: 10s
    icon: "mdi:information"

# Binary sensors for alerts
binary_sensor:
  - platform: template
    name: "HVAC Filter Alert"
    lambda: |-
      float delta_t_f = (id(hvac_return_air_temperature).state - id(hvac_supply_air_temperature).state) * 9/5;
      float pressure = id(hvac_static_pressure).state;
      return (delta_t_f < 7 && pressure > 150) || (delta_t_f < 10 && pressure > 125);
    device_class: "problem"

  - platform: template
    name: "HVAC High Pressure Alert"
    lambda: 'return id(hvac_static_pressure).state > 200;'
    device_class: "problem"

dashboard_import:
  package_import_url: github://brobstoncreations/delta-tango/delta-tango.yaml

captive_portal:

wifi:
  ap: {}
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password
#   manual_ip:
#     static_ip: !secret static_ip
#     gateway: !secret gateway
#     subnet: !secret subnet

# mqtt:
#   broker: !secret mqtt_broker
#   username: !secret mqtt_username
#   password: !secret mqtt_password

web_server:

api:

mdns:
    
ota:

logger:
  level: INFO
